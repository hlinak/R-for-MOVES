library(r4moves)
library(dplyr)
library(ggplot2)
library(XML)
#Written by Joseph Jakuta (DC DOEE)
#Contact joseph.jakuta@dc.gov or hlinak@gmail.com
password <- 'K7j0Ret79TwUIjxZExbZ'
movesdb_name <- 'movesdb20180517'
countydb_name <- 'ozn_dc_2017_naaq_in'
outputdb_name <- 'ozn_dc_2017_naaq_out'
moves_location <- "C:\\Users\\Public\\EPA\\MOVES\\MOVES2014b"
dbconn <- makeDBConnection(user = 'root', password=password)
getMOVESBaseTable(dbconn, movesdb_name, 'sourceusetype')
library(r4moves)
library(r4moves)
library(dplyr)
library(ggplot2)
library(XML)
password <- 'K7j0Ret79TwUIjxZExbZ'
movesdb_name <- 'movesdb20180517'
countydb_name <- 'ozn_dc_2017_naaq_in'
outputdb_name <- 'ozn_dc_2017_naaq_out'
moves_location <- "C:\\Users\\Public\\EPA\\MOVES\\MOVES2014b"
dbconn <- makeDBConnection(user = 'root', password=password)
getMOVESBaseTable(dbconn, movesdb_name, 'sourceusetype')
library(r4moves)
getMOVESBaseTable(dbconn, movesdb_name, 'sourceusetype')
library(r4moves)
library(dplyr)
library(ggplot2)
library(XML)
#Written by Joseph Jakuta (DC DOEE)
#Contact joseph.jakuta@dc.gov or hlinak@gmail.com
password <- 'K7j0Ret79TwUIjxZExbZ'
movesdb_name <- 'movesdb20180517'
countydb_name <- 'ozn_dc_2017_naaq_in'
outputdb_name <- 'ozn_dc_2017_naaq_out'
moves_location <- "C:\\Users\\Public\\EPA\\MOVES\\MOVES2014b"
dbconn <- makeDBConnection(user = 'root', password=password)
getMOVESBaseTable(dbconn, movesdb_name, 'sourceusetype')
library(r4moves)
library(r4moves)
library(r4moves)
library(r4moves)
library(dplyr)
library(ggplot2)
library(XML)
password <- 'K7j0Ret79TwUIjxZExbZ'
movesdb_name <- 'movesdb20180517'
countydb_name <- 'ozn_dc_2017_naaq_in'
outputdb_name <- 'ozn_dc_2017_naaq_out'
password <- 'password'
movesdb_name <- 'movesdb20181022'
countydb_name <- 'c11001y2016_20180906_2016clrp'
outputdb_name <- 'c11001y2017_2016clrp_out'
moves_location <- "C:\\Users\\Public\\EPA\\MOVES\\MOVES2014b"
password <- 'K7j0Ret79TwUIjxZExbZ'
movesdb_name <- 'movesdb20180517'
countydb_name <- 'ozn_dc_2017_naaq_in'
outputdb_name <- 'ozn_dc_2017_naaq_out'
moves_location <- "C:\\Users\\Public\\EPA\\MOVES\\MOVES2014b"
dbconn <- makeDBConnection(user = 'root', password=password)
suffix <- "_scenario1"
new_countydb_name <- paste(countydb_name, suffix, sep="")
new_outputdb_name <- paste(outputdb_name, suffix, sep="")
copyMOVESDatabase(dbconn, countydb_name, new_countydb_name)
data <- getAverageSpeedBin(dbconn, movesdb_name, countydb_name)
replaceMOVESTable(dbconn,new_countydb_name, "avgspeeddistribution", data)
folder <- input_runspec <- "C:\\Users\\joseph.jakuta\\Desktop\\"
input_runspec <- paste(folder, "test_runspec.xml", sep='')
output_runspec <- paste(folder, "test_runspec_new.mrs", sep='')
batchfile <- paste(folder, "test_batch.bat", sep='')
rs <- readRunspec(input_runspec)
getRunspecAttr(rs, "//scaleinputdatabase", "databasename")
xmlValue(getNodeSet(runspec, "//description"))
xmlValue(getNodeSet(rs, "//description"))
folder <- input_runspec <- "test_files\\"
input_runspec <- paste(folder, "test_runspec.xml", sep='')
rs <- readRunspec(input_runspec)
getRunspecAttr(rs, "//scaleinputdatabase", "databasename")
xmlValue(getNodeSet(rs, "//description"))
library(r4moves)
library(r4moves)
library(dplyr)
library(ggplot2)
library(XML)
password <- 'K7j0Ret79TwUIjxZExbZ'
movesdb_name <- 'movesdb20180517'
countydb_name <- 'ozn_dc_2017_naaq_in'
outputdb_name <- 'ozn_dc_2017_naaq_out'
dbconn <- makeDBConnection(user = 'root', password=password)
folder <- input_runspec <- "test_files\\"
input_runspec <- paste(folder, "test_runspec.xml", sep='')
output_runspec <- paste(folder, "test_runspec_new.mrs", sep='')
batchfile <- paste(folder, "test_batch.bat", sep='')
rs <- readRunspec(input_runspec)
getRunspecAttr(rs, "//scaleinputdatabase", "databasename")
getRunspecValue(rs, "//description")
setRunspecValue(rs, "//description", "test 2")
library(r4moves)
library(r4moves)
library(dplyr)
library(ggplot2)
library(XML)
#Written by Joseph Jakuta (DC DOEE)
#Contact joseph.jakuta@dc.gov or hlinak@gmail.com
password <- 'K7j0Ret79TwUIjxZExbZ'
movesdb_name <- 'movesdb20180517'
countydb_name <- 'ozn_dc_2017_naaq_in'
outputdb_name <- 'ozn_dc_2017_naaq_out'
moves_location <- "C:\\Users\\Public\\EPA\\MOVES\\MOVES2014b"
dbconn <- makeDBConnection(user = 'root', password=password)
suffix <- "_scenario1"
folder <- input_runspec <- "test_files\\"
input_runspec <- paste(folder, "test_runspec.xml", sep='')
output_runspec <- paste(folder, "test_runspec_new.mrs", sep='')
batchfile <- paste(folder, "test_batch.bat", sep='')
rs <- readRunspec(input_runspec)
getRunspecAttr(rs, "//scaleinputdatabase", "databasename")
getRunspecValue(rs, "//description")
setRunspecValue(rs, "//description", "test 2")
xmlValue(getNodeSet(rs,"//description")) = "test 2"
xmlValue(getNodeSet(rs,"//description")) <- "test 2"
getNodeSet(rs,"//description")
xmlValue(getNodeSet(rs,"//description")
xmlValue(getNodeSet(rs,"//description"))
xmlValue(getNodeSet(rs,"//description"))
ns <- getNodeSet(rs,"//description")
lapply(ns, function(n) { XML::newXMLNode("description"newXMLNode("id", x ))})
lapply(ns, function(n) { XML::newXMLNode("description", newXMLNode("id", x ))})
lapply(ns, function(n) { XML::newXMLNode("description",  "test2" )})
ns
rs
lapply(ns, function(n) { XML::newXMLNode("description",  "test2" )})
ns
xmlValue(getNodeSet(rs,"//description")) <- lapply(ns, function(n) { XML::newXMLNode("description",  "test2" )})
getRunspecValue(rs, "//description")
xmlValue(getNodeSet(rs,"//description")) <- lapply(ns, function(n) { XML::newXMLNode("description",  "test2" )})
xmlValue(getNodeSet(rs,"//description")) <- XML::newXMLNode("description",  "test2" )
lapply(ns, function(n) {
xmlValue(getNodeSet(rs,"//description")) <- lapply(ns, function(n) { XML::newXMLNode("description",  "test2" )})
xmlValue(getNodeSet(rs,"//description")) <- lapply(ns, function(n) { XML::newXMLNode("description",  "test2" )})
xmlValue(getNodeSet(rs,"//description")) <- lapply(ns, function(n) { XML::newXMLNode("description",  "test2" )})
(r4moves)
(r4moves)
(r4moves)
library(r4moves)
library(dplyr)
library(ggplot2)
library(XML)
password <- 'K7j0Ret79TwUIjxZExbZ'
movesdb_name <- 'movesdb20180517'
countydb_name <- 'ozn_dc_2017_naaq_in'
outputdb_name <- 'ozn_dc_2017_naaq_out'
moves_location <- "C:\\Users\\Public\\EPA\\MOVES\\MOVES2014b"
folder <- input_runspec <- "test_files\\"
input_runspec <- paste(folder, "test_runspec.xml", sep='')
output_runspec <- paste(folder, "test_runspec_new.mrs", sep='')
batchfile <- paste(folder, "test_batch.bat", sep='')
rs <- readRunspec(input_runspec)
getRunspecAttr(rs, "//scaleinputdatabase", "databasename")
getRunspecValue(rs, "//description")
ns <- getNodeSet(rs,"//description")
xmlValue(getNodeSet(rs,"//description")) <- lapply(ns, function(n) { XML::newXMLNode("description",  "test2" )})
xmlValue(getNodeSet(rs,"//description")) <- lapply(ns, function(n) { XML::newXMLCDataNode("description",  "test2" )})
lapply(ns, function(n) { XML::newXMLTextNode("description",  "test2" )})
xmlValue(getNodeSet(rs,"//description")) <- XML::newXMLCDataNode("description",  "test2" )
getNodeSet(rs,"//description") <- XML::newXMLCDataNode("description",  "test2" )
XML::newXMLCDataNode("description",  "test2" )
ns <- getNodeSet(rs,"//description")
lapply(ns, function(n) { n <- XML::newXMLTextNode("description",  "test2" )})
lapply(ns, function(n) { n <- XML::newXMLTextNode("test2" )})
getRunspecValue(rs, "//description")
lapply(ns, function(n) { n <- ifelse(cdata, XML::newXMLCDataNode("description"), XML::newXMLTextNode("test2")})
lapply(ns, function(n) { n <- ifelse(cdata, XML::newXMLCDataNode("description"), XML::newXMLTextNode("test2"))})
cdata=FALSE
lapply(ns, function(n) { n <- ifelse(cdata, XML::newXMLCDataNode("description"), XML::newXMLTextNode("test2"))})
lapply(ns, function(n) { n <- ifelse(cdata, XML::newXMLCDataNode("test2"), XML::newXMLTextNode("test2"))})
cdata=FALSE
if(cdata) {
lapply(ns, function(n) { n <- XML::newXMLCDataNode("test2")})
} else {
lapply(ns, function(n) { n <- XML::newXMLTextNode("test2")})
}
cdata=FALSE
if(cdata) {
lapply(ns, function(n) { n <- XML::newXMLCDataNode("test3")})
} else {
lapply(ns, function(n) { n <- XML::newXMLTextNode("test2")})
}
cdata=TRUE
if(cdata) {
lapply(ns, function(n) { n <- XML::newXMLCDataNode("test3")})
} else {
lapply(ns, function(n) { n <- XML::newXMLTextNode("test2")})
}
getRunspecValue(rs, "//description")
ns
getNodeSet(ns,"//description")
lapply(ns, function(n) { XML::xmlvalue(n)})
lapply(ns, function(n) { xmlvalue(n)})
lapply(ns, function(n) { xmlValue(n)})
cdata=TRUE
if(cdata) {
lapply(ns, function(n) { xmlValue(n) <- XML::newXMLCDataNode("test3")})
} else {
lapply(ns, function(n) { n <- XML::newXMLTextNode("test2")})
}
cdata=TRUE
if(cdata) {
lapply(ns, function(n) { xmlValue(n) <- "test3"})
} else {
lapply(ns, function(n) { n <- XML::newXMLTextNode("test2")})
}
ns <- getNodeSet(rs,"//scaleinputdatabase")
cdata=TRUE
if(cdata) {
lapply(ns, function(n) { xmlValue(n) <- "test3"})
} else {
lapply(ns, function(n) { n <- XML::newXMLTextNode("test2")})
}
rs
ns <- getNodeSet(rs,"//description")
cdata=TRUE
if(cdata) {
lapply(ns, function(n) { xmlValue(n) <- "<![CDATA[test3]]"})
} else {
lapply(ns, function(n) { xmlValue(n) <- "test3"})
}
ns <- getNodeSet(rs,"//description")
cdata=TRUE
if(cdata) {
lapply(ns, function(n) { xmlValue(n) <- "<![CDATA[test3]]>"})
} else {
lapply(ns, function(n) { xmlValue(n) <- "test3"})
}
ns <- getNodeSet(rs,"//description")
ns
getRunspecValue(rs, "//description")
getRunspecValue(rs, "//scaleinputdatabase")
ns
ns <- getNodeSet(rs,"//scaleinputdatabase")
ns
"//description"
ns <- getNodeSet(rs,"//description")
ns
xmlCDataNode("test3", parent=ns)
xmlNewCDataNode("test3", parent=ns)
ns
xmlCDataNode("test3", parent=ns)
XML::addChildren(ns, c(xmlCDataNode("test3", parent=ns)))
XML::addChildren(ns[0], c(xmlCDataNode("test3", parent=ns)))
lapply(ns, function(n) { XML::addChildren(n, c(xmlCDataNode("test3"))) } )
getRunspecValue(rs, "//description")
lapply(ns, function(n) { XML::addChildren(n, c(xmlCDataNode("test3"))) } )
lapply(ns, function(n) {
XML::removeChildren(n)
XML::addChildren(n, c(xmlCDataNode("test3"))) }
)
lapply(ns, function(n) {
XML::removeChildren(n) }
)
lapply(ns, function(n) {
XML::removeChildren(n)
XML::addChildren(n, c(xmlCDataNode("test3", parent=rs))) }
)
getRunspecValue(rs, "//description")
lapply(ns, function(n) {
XML::removeChildren(n)
XML::addChildren(n, c(xmlCDataNode("test3", parent=n))) }
)
lapply(ns, function(n) {
XML::addChildren(n, c(xmlCDataNode("test3", parent=n))) }
)
lapply(ns, function(n) {
XML::removeChildren(n))
XML::addChildren(n, c(xmlCDataNode("test3"))) }
lapply(ns, function(n) {
XML::removeChildren(n)
XML::addChildren(n, c(xmlCDataNode("test3"))) }
)
lapply(ns, function(n) {
XML::removeChildren(n)
XML::addChildren(n, c(xmlNode("test3"))) }
)
lapply(ns, function(n) {
XML::removeChildren(n)
XML::addChildren(n, c(xmlNode("x"))) }
)
cdata=TRUE
lapply(ns, function(n) {
XML::removeChildren(n)
XML::addChildren(n, c(xmlNode("x"))) }
)
lapply(ns, function(n) {
XML::removeChildren(n)
XML::addChildren(n, c(xmlNode("x"))) }
)
lapply(ns, function(n) {
XML::removeChildren(getRunspecValue(rs, "//description"))
XML::addChildren(n, c(xmlNode("x"))) }
)
lapply(ns, function(n) {
XML::removeChildren(n) }
)
cdata=TRUE
lapply(ns, function(n) {
XML::removeChildren(n) }
)
ns
lapply(ns, function(n) {
XML::replaceNodes(n, c(xmlNode("x"))) }
)
lapply(ns, function(n) {
XML::replaceNodes(n, c(xmlNode("x"))) }
)
lapply(ns, function(n) {
XML::replaceNodes(n, c(xmlNode("x"))) }
)
getRunspecValue(rs, "//description")
getRunspecValue(rs, "//description")
rs <- readRunspec(input_runspec)
getRunspecValue(rs, "//description")
ns <- getNodeSet(rs,"//description")
lapply(ns, function(n) {
XML::replaceNodes(n, c(xmlNode("x"))) }
)
getRunspecValue(rs, "//description")
lapply(ns, function(n) {
XML::replaceNodes(n, xmlNode("x")) }
)
getRunspecValue(rs, "//description")
rs <- readRunspec(input_runspec)
getRunspecAttr(rs, "//scaleinputdatabase", "databasename")
getRunspecValue(rs, "//description")
lapply(ns, function(n) {
XML::replaceNodes(n, xmlNode("x")) }
)
getRunspecValue(rs, "//description")
ns <- getNodeSet(rs,"//description")
lapply(ns, function(n) {
XML::replaceNodes(n, xmlNode("x")) }
)
getRunspecValue(rs, "//description")
ns <- getNodeSet(rs,"//description")
ns
lapply(ns, function(n) {
XML::replaceNodes(n, xmlCDataNode("x")) }
)
rs <- readRunspec(input_runspec)
getRunspecValue(rs, "//description")
ns <- getNodeSet(rs,"//description")
ns
lapply(ns, function(n) {
XML::replaceNodes(n, xmlCDataNode("x")) }
)
getRunspecValue(rs, "//description")
lapply(ns, function(n) {
XML::replaceNodes(n, xmlCDataNode("x")) }
)
lapply(ns, function(n) {
XML::replaceNodes(n, xmlCDataNode("description", "x")) }
)
xmlCDataNode("description", "x")
lapply(ns, function(n) {
XML::replaceNodes(n, xmlCDataNode("x")) }
)
lapply(ns, function(n) {
XML::replaceNodes(n, xmlTextNode("x")) }
)
xmlTextNode("x")
lapply(ns, function(n) {
XML::replaceNodes(n, xmlTextNode("x", parent=n)) }
)
lapply(ns, function(n) {
XML::replaceNodes(n, newXMLTextNode("x", parent=n)) }
)
getRunspecValue(rs, "//description")
lapply(ns, function(n) {
XML::replaceNodes(n, newXMLTextNode("x")) }
)
newXMLTextNode("x")
lapply(ns, function(n) {
XML::replaceNodes(n, newXMLCDATANode("x", parent=n)) }
)
lapply(ns, function(n) {
XML::replaceNodes(n, newXMLCDataNode("x", parent=n)) }
)
rs <- readRunspec(input_runspec)
getRunspecValue(rs, "//description")
ns <- getNodeSet(rs,"//description")
lapply(ns, function(n) {
XML::replaceNodes(n, newXMLCDataNode("x", parent=n)) }
)
getRunspecValue(rs, "//description")
newXMLCDataNode("x", parent=n)
newXMLCDataNode("x", parent=n)
ns <- getNodeSet(rs,"//description")
lapply(ns, function(n) {
XML::replaceNodes(n, newXMLCDataNode("x", parent=n)) }
)
ns <- getNodeSet(rs,"//description")
ns
getRunspecValue(rs, "//description")
rs <- readRunspec(input_runspec)
getRunspecValue(rs, "//description")
ns <- getNodeSet(rs,"//description")
lapply(ns, function(n) {
XML::removeChildren(0)
XML::addChildren(n, c(xmlCDataNode("test3"))) }
)
XML::removeChildren(n, c(0))
lapply(ns, function(n) {
XML::removeChildren(n, c(0))
XML::addChildren(n, c(xmlCDataNode("test3"))) }
)
lapply(ns, function(n) {
XML::removeChildren(n, c(1))
XML::addChildren(n, c(xmlCDataNode("test3"))) }
)
lapply(ns, function(n) {
XML::removeChildren(n, c(1))
XML::addChildren(n, c(xmlNode("test3"))) }
)
library(r4moves)
library(r4moves)
library(dplyr)
library(ggplot2)
library(XML)
password <- 'K7j0Ret79TwUIjxZExbZ'
movesdb_name <- 'movesdb20180517'
countydb_name <- 'ozn_dc_2017_naaq_in'
outputdb_name <- 'ozn_dc_2017_naaq_out'
dbconn <- makeDBConnection(user = 'root', password=password)
folder <- input_runspec <- "test_files\\"
input_runspec <- paste(folder, "test_runspec.xml", sep='')
output_runspec <- paste(folder, "test_runspec_new.mrs", sep='')
batchfile <- paste(folder, "test_batch.bat", sep='')
rs <- readRunspec(input_runspec)
getRunspecAttr(rs, "//scaleinputdatabase", "databasename")
getRunspecValue(rs, "//description")
setRunspecValue(rs, "//description", "test 2")
runspec <- rs
xpathsLocation <- "//description"
value <- "text 2"
cdata <- FALSE
ns <- getNodeSet(runspec, xpathsLocation)
lapply(ns, function(n) {
XML::removeChildren(n, c(1))
if(cdata) {
XML::addChildren(n, c(xmlCDataNode(value)))
} else {
XML::addChildren(n, c(xmlNode(value)))
}
})
lapply(ns, function(n) {
XML::removeChildren(n, c(1))
if(cdata) {
XML::addChildren(n, c(newXMLCDataNode(value)))
} else {
XML::addChildren(n, c(newXMLTextNode(value)))
}
})
library(r4moves)
library(r4moves)
library(dplyr)
library(ggplot2)
library(XML)
password <- 'K7j0Ret79TwUIjxZExbZ'
movesdb_name <- 'movesdb20180517'
countydb_name <- 'ozn_dc_2017_naaq_in'
outputdb_name <- 'ozn_dc_2017_naaq_out'
moves_location <- "C:\\Users\\Public\\EPA\\MOVES\\MOVES2014b"
folder <- input_runspec <- "test_files\\"
input_runspec <- paste(folder, "test_runspec.xml", sep='')
output_runspec <- paste(folder, "test_runspec_new.mrs", sep='')
batchfile <- paste(folder, "test_batch.bat", sep='')
rs <- readRunspec(input_runspec)
getRunspecAttr(rs, "//scaleinputdatabase", "databasename")
getRunspecValue(rs, "//description")
setRunspecValue(rs, "//description", "test 2")
rs
setRunspecValue(rs, "//description", "test 2", TRUE)
library(r4moves)
password <- 'K7j0Ret79TwUIjxZExbZ'
movesdb_name <- 'movesdb20180517'
countydb_name <- 'ozn_dc_2017_naaq_in'
outputdb_name <- 'ozn_dc_2017_naaq_out'
getMOVESTables(dbconn, countydb_name)
moves_location <- "C:\\Users\\Public\\EPA\\MOVES\\MOVES2014b"
dbconn <- makeDBConnection(user = 'root', password=password)
getMOVESTables(dbconn, countydb_name)
countydb_name <- 'ozn_dc_2017_naaq_in'
outputdb_name <- 'ozn_dc_2017_naaq_out'
getMOVESTables(dbconn, countydb_name)
getMOVESTables(dbconn, countydb_name)
countydb_name
getMOVESTables(dbconn, countydb_name)
library(r4moves)
library(r4moves)
r4moves
r4moves
library(r4moves)
library(dplyr)
library(ggplot2)
library(XML)
password <- 'K7j0Ret79TwUIjxZExbZ'
movesdb_name <- 'movesdb20180517'
countydb_name <- 'ozn_dc_2017_naaq_in'
outputdb_name <- 'ozn_dc_2017_naaq_out'
dbconn <- makeDBConnection(user = 'root', password=password)
getMOVESTables(dbconn, countydb_name)
