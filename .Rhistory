devtools::document()
setwd('..')
Run devtools::document()
Run devtools::install()
setwd('..')
devtools::document()
devtools::install()
devtools::install()
setwd('..')
devtools::document()
setwd('C:\Users\joseph.jakuta\Documents\r4moves')
setwd('C:\\Users\\joseph.jakuta\\Documents\\r4moves')
devtools::document()
devtools::install()
devtools::document()
devtools::document()
devtools::install()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::install()
devtools::install()
devtools::document()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
movesDBversions <- c(c("movesdb20161117", FALSE),
c("movesdb20180517", TRUE),
c("movesdb20181022", FALSE))
db_name <- test
db_name <- "test"
warning <- "Database appears to be a MOVES database, but this database has not yet been implemement in r4moves."
for(mdbv in movesDBversions) {
if(mdbv[0] == db_name) {
warning <- ifelse(mdbv[1], "x", "Database is confirmed to be MOVES database, but this database has not yet been tested in r4moves.")
}
}
movesDBversions <- array(c("movesdb20161117", FALSE),
c("movesdb20180517", TRUE),
c("movesdb20181022", FALSE))
c("movesdb20181022", FALSE))
movesDBversions <- array(c(c("movesdb20161117", FALSE),
c("movesdb20180517", TRUE),
c("movesdb20181022", FALSE)))
movesDBversions <- array(c(c("movesdb20161117", FALSE),
c("movesdb20180517", TRUE),
c("movesdb20181022", FALSE)), c(3,2))
movesDBversions
movesDBversions <- array(c(c("movesdb20161117", FALSE),
c("movesdb20180517", TRUE),
c("movesdb20181022", FALSE)),
c(2,3))
movesDBversions
movesDBversions <- array(c(c("movesdb20161117", "movesdb20180517", "movesdb20181022"),
c(FALSE, TRUE, FALSE)),
c(2,3))
movesDBversions
movesDBversions <- array(c(c("movesdb20161117", "movesdb20180517", "movesdb20181022"),
c(FALSE, TRUE, FALSE)),
c(3,2))
movesDBversions
for(mdbv in movesDBversions) {
if(mdbv[0] == db_name) {
warning <- ifelse(mdbv[1], "x", "Database is confirmed to be MOVES database, but this database has not yet been tested in r4moves.")
}
}
for(mdbv in movesDBversions) {
if(mdbv[0] == db_name) {
warning <- ifelse(mdbv[1], "x", "Database is confirmed to be MOVES database, but this database has not yet been tested in r4moves.")
}
}
movesDBversions
for(row in 1:nrow(movesDBversions)) {
if(movesDBversions[row, 1] == db_name) {
warning <- ifelse(as.boolean(movesDBversions[row, 2]), "x", "Database is confirmed to be MOVES database, but this database has not yet been tested in r4moves.")
}
}
warning <- "Database Xappears to be a MOVES database, but this database has not yet been implememented or tested in r4moves."
for(row in 1:nrow(movesDBversions)) {
if(movesDBversions[row, 1] == db_name) {
warning <- ifelse(as.boolean(movesDBversions[row, 2]), "x", "Database is confirmed to be MOVES database, but this database has not yet been tested in r4moves.")
}
}
db_name <- "test"
if(grepl("^movesdb", db_name)) {
warning <- "Database Xappears to be a MOVES database, but this database has not yet been implememented or tested in r4moves."
for(row in 1:nrow(movesDBversions)) {
if(movesDBversions[row, 1] == db_name) {
warning <- ifelse(as.boolean(movesDBversions[row, 2]), "x", "Database is confirmed to be MOVES database, but this database has not yet been tested in r4moves.")
}
}
}
warning <- ""
if(grepl("^movesdb", db_name)) {
warning <- "Database Xappears to be a MOVES database, but this database has not yet been implememented or tested in r4moves."
for(row in 1:nrow(movesDBversions)) {
if(movesDBversions[row, 1] == db_name) {
warning <- ifelse(as.boolean(movesDBversions[row, 2]), "x", "Database is confirmed to be MOVES database, but this database has not yet been tested in r4moves.")
}
}
}
db_name <- "movesdb"
if(grepl("^movesdb", db_name)) {
warning <- "Database Xappears to be a MOVES database, but this database has not yet been implememented or tested in r4moves."
for(row in 1:nrow(movesDBversions)) {
if(movesDBversions[row, 1] == db_name) {
warning <- ifelse(as.boolean(movesDBversions[row, 2]), "x", "Database is confirmed to be MOVES database, but this database has not yet been tested in r4moves.")
}
}
}
db_name <- "movesdb20161117"
if(grepl("^movesdb", db_name)) {
warning <- "Database Xappears to be a MOVES database, but this database has not yet been implememented or tested in r4moves."
for(row in 1:nrow(movesDBversions)) {
if(movesDBversions[row, 1] == db_name) {
warning <- ifelse(as.boolean(movesDBversions[row, 2]), "x", "Database is confirmed to be MOVES database, but this database has not yet been tested in r4moves.")
}
}
}
if(grepl("^movesdb", db_name)) {
warning <- "Database Xappears to be a MOVES database, but this database has not yet been implememented or tested in r4moves."
for(row in 1:nrow(movesDBversions)) {
if(movesDBversions[row, 1] == db_name) {
warning <- ifelse(as.bool(movesDBversions[row, 2]), "x", "Database is confirmed to be MOVES database, but this database has not yet been tested in r4moves.")
}
}
}
if(grepl("^movesdb", db_name)) {
warning <- "Database Xappears to be a MOVES database, but this database has not yet been implememented or tested in r4moves."
for(row in 1:nrow(movesDBversions)) {
if(movesDBversions[row, 1] == db_name) {
warning <- ifelse(movesDBversions[row, 2] == "TRUE", "x", "Database is confirmed to be MOVES database, but this database has not yet been tested in r4moves.")
}
}
}
db_name <- "movesdb20180517"
warning <- ""
if(grepl("^movesdb", db_name)) {
warning <- "Database Xappears to be a MOVES database, but this database has not yet been implememented or tested in r4moves."
for(row in 1:nrow(movesDBversions)) {
if(movesDBversions[row, 1] == db_name) {
warning <- ifelse(movesDBversions[row, 2] == "TRUE", "x", "Database is confirmed to be MOVES database, but this database has not yet been tested in r4moves.")
}
}
}
